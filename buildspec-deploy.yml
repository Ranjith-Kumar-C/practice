version: 0.2

env:
  variables:
    REGION: "us-east-1"
    APP_ID: "d133vxv6yy7vaa"
    BRANCH: "staging"

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - pip install --upgrade awscli jq || true
      - echo "Install done"

  pre_build:
    commands:
      - echo "Reading artifact-info.json"
      - cat artifact-info.json
      - export ARTIFACT_KEY=$(jq -r .artifact_key artifact-info.json)
      - export S3_BUCKET=$(jq -r .s3_bucket artifact-info.json)
      - echo "Deploying artifact: s3://${S3_BUCKET}/${ARTIFACT_KEY}"

  build:
    commands:
      - echo "Calling start-deployment..."
      - aws amplify start-deployment --app-id ${APP_ID} --branch-name ${BRANCH} --source-url "s3://${S3_BUCKET}/${ARTIFACT_KEY}" > start-deploy-output.json
      - cat start-deploy-output.json
      - JOB_ID=$(jq -r '.jobSummary.jobId // .jobId // empty' start-deploy-output.json)
      - if [ -z "$JOB_ID" ]; then echo "Failed to start deployment (no job id)"; exit 1; fi
      - echo "Polling job status: $JOB_ID"
      - n=0
      - STATUS=""
      - until [ "$STATUS" = "SUCCEED" ] || [ "$STATUS" = "FAILED" ] || [ $n -ge 40 ]; do
          STATUS_JSON=$(aws amplify get-job --app-id ${APP_ID} --branch-name ${BRANCH} --job-id ${JOB_ID});
          STATUS=$(echo "$STATUS_JSON" | jq -r '.job.summary.status' || echo "UNKNOWN");
          echo "Attempt $n: status=$STATUS";
          if [ "$STATUS" = "SUCCEED" ] || [ "$STATUS" = "FAILED" ]; then break; fi;
          n=$((n+1));
          sleep 10;
        done
      - if [ "$STATUS" != "SUCCEED" ]; then echo "Deployment finished with non-success status: $STATUS"; exit 1; fi

artifacts:
  files:
    - start-deploy-output.json